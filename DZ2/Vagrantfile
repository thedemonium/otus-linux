# -*- mode: ruby -*-
# vim: set ft=ruby :

home = ENV['HOME']

MACHINES = {
  :otuslinux => {
        :box_name => "centos/7",
        :ip_addr => '192.168.11.101',
	:disks => {
	:sata1 => {	    
      :dfile => home + '/VirtualBox/sata1.vdi', 
	    :size => 40000,
	    :port => 1
	},
	:sata2 => {
      :dfile => home + '/VirtualBox/sata2.vdi', 
      :size => 250, # Megabytes
			:port => 2
		},
  :sata3 => {
      :dfile => home + '/VirtualBox/sata3.vdi', 
      :size => 250,
      :port => 3
    },
  :sata4 => {
      :dfile => home + '/VirtualBox/sata4.vdi', 
      :size => 250,
      :port => 4
    },    
  :sata5 => {
      :dfile => home + '/VirtualBox/sata5.vdi', 
      :size => 250, # Megabytes
      :port => 5
    }

	}

		
  },
}

Vagrant.configure("2") do |config|

  MACHINES.each do |boxname, boxconfig|

      config.vm.define boxname do |box|

          box.vm.box = boxconfig[:box_name]
          box.vm.host_name = boxname.to_s

          #box.vm.network "forwarded_port", guest: 3260, host: 3260+offset

          box.vm.network "private_network", ip: boxconfig[:ip_addr]

          box.vm.provider :virtualbox do |vb|
            	  vb.customize ["modifyvm", :id, "--memory", "1024"]
                  needsController = false
		  boxconfig[:disks].each do |dname, dconf|
			  unless File.exist?(dconf[:dfile])
				vb.customize ['createhd', '--filename', dconf[:dfile], '--variant', 'Fixed', '--size', dconf[:size]]
                                needsController =  true
                          end

		  end
                  if needsController == true
                     vb.customize ["storagectl", :id, "--name", "SATA", "--add", "sata" ]
                     boxconfig[:disks].each do |dname, dconf|
                         vb.customize ['storageattach', :id,  '--storagectl', 'SATA', '--port', dconf[:port], '--device', 0, '--type', 'hdd', '--medium', dconf[:dfile]]
                     end
                  end
          end
 	  box.vm.provision "shell", inline: <<-SHELL
	      mkdir -p ~root/.ssh
              cp ~vagrant/.ssh/auth* ~root/.ssh
	      yum install -y mdadm smartmontools hdparm gdisk mc
	      mdadm --zero-superblock --force /dev/sd{b,c,d,e,f}

        mdadm --create --verbose /dev/md1 -l 5 -n 4 /dev/sd{c,d,e,f}
        mkdir -p /etc/mdadm/
        echo "DEVICE partitions" > /etc/mdadm/mdadm.conf
        mdadm --detail --scan --verbose | awk '/ARRAY/ {print}' >> /etc/mdadm/mdadm.conf
        parted -s /dev/md1 mklabel gpt
        parted /dev/md1 mkpart primary ext4 0% 20%
        parted /dev/md1 mkpart primary ext4 20% 40%
        parted /dev/md1 mkpart primary ext4 40% 60%
        parted /dev/md1 mkpart primary ext4 60% 80%
        parted /dev/md1 mkpart primary ext4 80% 100%
        for i in $(seq 1 5); do sudo mkfs.ext4 /dev/md1p$i; done
        mkdir -p /raid/part{1,2,3,4,5}
        for i in $(seq 1 5); do mount /dev/md1p$i /raid/part$i; done

## additional task

        dd if=/dev/sda of=/dev/sdb bs=512 count=1
        sudo mdadm --create --verbose /dev/md0 -l 1 --raid-devices=2 missing /dev/sdb1 -R
        mkfs.ext4 /dev/md0
        mount /dev/md0 /mnt/
        rsync -axu / /mnt/

        sudo mount --rbind /dev  /mnt/dev
        sudo mount --rbind /proc /mnt/proc
        sudo mount --rbind /sys  /mnt/sys
        sudo chroot /mnt /bin/bash -c "echo UUID=`blkid -o value -s UUID /dev/md0` / xfs     defaults        0 0 > /etc/fstab "
        sudo chroot /mnt /bin/bash -c "mdadm --detail --scan > /etc/mdadm.conf" 
        sudo chroot /mnt /bin/bash -c "rm -rf /etc/mtab; ln -s /proc/self/mounts /etc/mtab"
        sudo chroot /mnt /bin/bash -c "dracut /boot/initramfs-$(uname -r).img $(uname -r) --force"
        sudo chroot /mnt /bin/bash -c "grub2-mkconfig -o /boot/grub2/grub.cfg"
        #sudo chroot /mnt /bin/bash -c "grub2-install /dev/sdb"

  	  SHELL

      end
  end
end

